{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\narus\\\\Documents\\\\GitHub\\\\fullstack_open_2023\\\\part1\\\\courseinfo\\\\src\\\\App.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Header = props => {\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: [\" \", props.course.name, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 14\n  }, this);\n};\n_c = Header;\nconst Part = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\" \", props.name, \" \", props.exercises, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 14\n  }, this);\n};\n_c2 = Part;\nconst Content = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Part, {\n      name: props.course.parts[0].name,\n      exercises: props.course.parts[0].exercises\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(Part, {\n      name: props.course.parts[1].name,\n      exercises: props.course.parts[1].exercises\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(Part, {\n      name: props.course.parts[2].name,\n      exercises: props.course.parts[2].exercises\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 14\n  }, this);\n};\n_c3 = Content;\nconst Total = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\" The total number of exercises is \", props.total, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 14\n  }, this);\n};\n_c4 = Total;\nconst App = () => {\n  const course = {\n    name: 'Half Stack application development',\n    parts: [{\n      name: 'Fundamentals of React',\n      exercises: 10\n    }, {\n      name: 'Using props to pass data',\n      exercises: 7\n    }, {\n      name: 'State of a component',\n      exercises: 14\n    }]\n  };\n  let myNums = [];\n  for (let i = 0; i < course.parts.length; i++) {\n    myNums.push(course.parts[i].exercises);\n  }\n  const sum = myNums.reduce((partialSum, a) => partialSum + a, 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      course: course\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(Content, {\n      course: course\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 12\n    }, this), \" \", /*#__PURE__*/_jsxDEV(Total, {\n      total: sum\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 40\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 14\n  }, this);\n};\n_c5 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"Part\");\n$RefreshReg$(_c3, \"Content\");\n$RefreshReg$(_c4, \"Total\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Header","props","children","course","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","Part","exercises","_c2","Content","parts","_c3","Total","total","_c4","App","myNums","i","length","push","sum","reduce","partialSum","a","_c5","$RefreshReg$"],"sources":["C:/Users/narus/Documents/GitHub/fullstack_open_2023/part1/courseinfo/src/App.js"],"sourcesContent":["import React from 'react'\nconst Header = (props) => {\n    return ( <\n        h1 > { props.course.name } < /h1>\n    )\n}\n\nconst Part = (props) => {\n    return ( <\n        div > { props.name } { props.exercises } < /div>\n    )\n\n}\n\nconst Content = (props) => {\n    return ( <\n        div >\n        <\n        Part name = { props.course.parts[0].name }\n        exercises = { props.course.parts[0].exercises }\n        / > <\n        Part name = { props.course.parts[1].name }\n        exercises = { props.course.parts[1].exercises }\n        / > <\n        Part name = { props.course.parts[2].name }\n        exercises = { props.course.parts[2].exercises }\n        / > < /\n        div >\n    )\n}\n\nconst Total = (props) => {\n    return ( <\n        div > The total number of exercises is { props.total } < /div>\n    )\n}\n\nconst App = () => {\n    const course = {\n        name: 'Half Stack application development',\n        parts: [\n          {\n            name: 'Fundamentals of React',\n            exercises: 10\n          },\n          {\n            name: 'Using props to pass data',\n            exercises: 7\n          },\n          {\n            name: 'State of a component',\n            exercises: 14\n          }\n        ]\n      }\n    let myNums = []\n    for (let i = 0; i < course.parts.length; i++) {\n        myNums.push(course.parts[i].exercises)\n    }\n    const sum = myNums.reduce((partialSum, a) => partialSum + a, 0);\n\n    return ( <\n        div >\n        <\n        Header course = { course }\n        /> <Content course={course}/ > <\n        Total total = { sum }\n        / > < /\n        div >\n    )\n}\n\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}